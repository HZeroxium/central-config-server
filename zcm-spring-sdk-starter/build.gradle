plugins {
  id("java")
  id("maven-publish")
  id("io.spring.dependency-management") version "1.1.6"
  id("org.springframework.boot") version "3.3.13" apply false
  id("com.google.protobuf") version "0.9.4"
}

group = "com.vng.zing"
version = "0.1.0"

java {
  toolchain { languageVersion.set(JavaLanguageVersion.of(21)) }
  withSourcesJar()
}

repositories { mavenCentral() }

dependencyManagement {
  imports {
    mavenBom("org.springframework.boot:spring-boot-dependencies:3.3.13")
    mavenBom("org.springframework.cloud:spring-cloud-dependencies:2023.0.5")
  }
}

dependencies {
  // Spring core & autoconfigure
  implementation("org.springframework.boot:spring-boot-autoconfigure:3.3.13")
  implementation("org.springframework.boot:spring-boot-starter:3.3.13")

  // Spring Web -> RestClient (synchronous) để tích hợp LoadBalancer filter
  implementation("org.springframework.boot:spring-boot-starter-web:3.3.13")

  // Spring Cloud starters
  implementation("org.springframework.cloud:spring-cloud-starter-loadbalancer")
  implementation("org.springframework.cloud:spring-cloud-starter-consul-discovery")
  implementation("org.springframework.cloud:spring-cloud-starter-config")
  implementation("org.springframework.cloud:spring-cloud-starter-bus-kafka")
  implementation("org.springframework.cloud:spring-cloud-commons")
  implementation("org.springframework.cloud:spring-cloud-context")

  // Spring Kafka (client utils)
  implementation("org.springframework.kafka:spring-kafka")

  // Thrift
  implementation("org.apache.thrift:libthrift:0.22.0")

  // gRPC
  implementation("io.grpc:grpc-netty-shaded:1.60.0")
  implementation("io.grpc:grpc-protobuf:1.60.0")
  implementation("io.grpc:grpc-stub:1.60.0")
  implementation("com.google.protobuf:protobuf-java:3.25.1")
  compileOnly("javax.annotation:javax.annotation-api:1.3.2")

  // Configuration metadata generator
  annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")

  // Lombok (tuỳ chọn)
  compileOnly("org.projectlombok:lombok:1.18.32")
  annotationProcessor("org.projectlombok:lombok:1.18.32")
  testCompileOnly("org.projectlombok:lombok:1.18.32")
  testAnnotationProcessor("org.projectlombok:lombok:1.18.32")

  testImplementation("org.springframework.boot:spring-boot-starter-test:3.3.13")
}

// Thrift code generation
task generateThrift(type: Exec) {
  commandLine 'thrift', '--gen', 'java', '-out', 
      'build/generated/source/thrift/main/java', 'src/main/thrift/zcm_sdk.thrift'
  doFirst {
    mkdir('build/generated/source/thrift/main/java')
  }
}

// gRPC code generation
protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:3.25.1"
  }
  plugins {
    grpc {
      artifact = "io.grpc:protoc-gen-grpc-java:1.60.0"
    }
  }
  generateProtoTasks {
    all().each { task ->
      task.plugins {
        grpc {}
      }
    }
  }
}

sourceSets {
  main {
    java {
      srcDirs += ['build/generated/source/proto/main/grpc']
      srcDirs += ['build/generated/source/proto/main/java']
      srcDirs += ['build/generated/source/thrift/main/java']
    }
  }
}

compileJava.dependsOn generateThrift, generateProto
sourcesJar.dependsOn generateThrift, generateProto

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      groupId = "com.vng.zing"
      artifactId = "zcm-spring-sdk-starter"
      version = project.version.toString()
    }
  }
  repositories { mavenLocal() }
}
