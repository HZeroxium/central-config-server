server:
  port: ${SERVER_PORT:8080}

spring:
  application:
    name: user-thrift-server-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:default}
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
    consumer:
      group-id: user-thrift-server-group
      auto-offset-reset: earliest
      enable-auto-commit: false
      properties:
        "[schema.registry.url]": ${SCHEMA_REGISTRY_URL:http://schema-registry:8081}
        "[specific.avro.reader]": true
        "[isolation.level]": read_committed
    producer:
      acks: all
      retries: 2147483647
      properties:
        "[enable.idempotence]": true
        "[delivery.timeout.ms]": 120000
        "[schema.registry.url]": ${SCHEMA_REGISTRY_URL:http://schema-registry:8081}
        "[auto.register.schemas]": true
    listener:
      ack-mode: record
      missing-topics-fatal: false

thrift:
  port: ${THRIFT_PORT:9090}
  server-name: thrift-server
  max-threads: 10
  min-threads: 2

app:
  name: user-thrift-server-service
  version: 1.0.0
  environment: ${ENVIRONMENT:development}
  rpc-timeout-seconds: 30
  max-pending-replies: 1000

kafka:
  topics:
    ping-request: ping.request
    ping-response: ping.response
    user-create-request: user.create.request
    user-create-response: user.create.response
    user-get-request: user.get.request
    user-get-response: user.get.response
    user-update-request: user.update.request
    user-update-response: user.update.response
    user-delete-request: user.delete.request
    user-delete-response: user.delete.response
    user-list-request: user.list.request
    user-list-response: user.list.response

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
