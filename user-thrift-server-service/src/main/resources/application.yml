server:
  port: ${SERVER_PORT:8080}

spring:
  application:
    name: user-thrift-server-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:default}
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
    consumer:
      group-id: user-thrift-server-group
      auto-offset-reset: earliest
      enable-auto-commit: false
      properties:
        schema.registry.url: ${SCHEMA_REGISTRY_URL:http://schema-registry:8081}
        specific.avro.reader: true
        isolation.level: read_committed
    producer:
      acks: all
      retries: 2147483647
      properties:
        enable.idempotence: true
        delivery.timeout.ms: 120000
        schema.registry.url: ${SCHEMA_REGISTRY_URL:http://schema-registry:8081}
        auto.register.schemas: true
    listener:
      ack-mode: record
      missing-topics-fatal: false

thrift:
  port: ${THRIFT_PORT:9090}

app:
  name: user-thrift-server-service
  version: 1.0.0
  environment: ${ENVIRONMENT:development}

kafka:
  topics:
    ping:
      request: ping.request
      response: ping.response
    user:
      create:
        request: user.create.request
        response: user.create.response
      get:
        request: user.get.request
        response: user.get.response
      update:
        request: user.update.request
        response: user.update.response
      delete:
        request: user.delete.request
        response: user.delete.response
      list:
        request: user.list.request
        response: user.list.response

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics,env,beans,configprops,loggers,threaddump,heapdump
  endpoint:
    health:
      show-details: when_authorized
      show-components: always
    prometheus:
      enabled: true
    metrics:
      enabled: true
  metrics:
    tags:
      application: user-thrift-server-service
      service: user-thrift-server-service
      environment: ${ENVIRONMENT:development}

logging:
  level:
    root: DEBUG
    com.example.thriftserver: DEBUG
    org.springframework.kafka: DEBUG
    org.apache.kafka: DEBUG
    org.springframework.web: INFO
    io.micrometer: INFO
  config: classpath:log4j2-spring.xml
