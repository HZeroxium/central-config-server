spring:
  application:
    name: user-thrift-server-service
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      url: ${SPRING_DATA_REDIS_URL:redis://redis:6379}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
    consumer:
      group-id: user-thrift-server-group
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        isolation.level: read_committed
    producer:
      acks: all
      retries: 2147483647
      properties:
        enable.idempotence: true
        delivery.timeout.ms: 120000
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    listener:
      ack-mode: record
      missing-topics-fatal: false

thrift:
  port: ${THRIFT_PORT:9090}

app:
  name: user-thrift-server-service
  version: 1.0.0
  environment: ${ENVIRONMENT:development}

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics,env,beans,configprops,loggers,threaddump,heapdump
  endpoint:
    health:
      show-details: when_authorized
      show-components: always
    prometheus:
      enabled: true
    metrics:
      enabled: true
  metrics:
    tags:
      application: user-thrift-server-service
      service: user-thrift-server-service
      environment: ${ENVIRONMENT:development}

logging:
  level:
    com.example.thriftserver: DEBUG
