/**
 * Generated by orval v7.14.0 üç∫
 * Do not edit manually.
 * Config Control Service API
 * Centralized configuration management and drift detection service.

**Features:**
- Service instance heartbeat tracking
- Configuration drift detection and reporting
- Service discovery integration with Consul
- Config refresh orchestration via Kafka
- Real-time monitoring and alerts

**Architecture:**
- Hexagonal architecture with distinct API, Application, Domain, and Infrastructure layers
- MongoDB for persistence
- Redis for caching
- Kafka for event broadcasting

 * OpenAPI spec version: 1.0.0
 */
import type { ConsulTaggedAddresses } from './consulTaggedAddresses';
import type { ConsulNodeMeta } from './consulNodeMeta';
import type { ConsulServiceWeights } from './consulServiceWeights';
import type { ConsulServiceResponseServiceMeta } from './consulServiceResponseServiceMeta';
import type { ConsulServiceProxy } from './consulServiceProxy';
import type { ConsulServiceConnect } from './consulServiceConnect';
import type { ConsulServiceResponseServiceLocality } from './consulServiceResponseServiceLocality';

/**
 * Consul service details with full metadata and registration information
 */
export interface ConsulServiceResponse {
  /** Unique identifier for this service instance */
  ID?: string;
  /** Name of the Consul node hosting this service */
  Node?: string;
  /** IP address of the node */
  Address?: string;
  /** Datacenter where the service is registered */
  Datacenter?: string;
  TaggedAddresses?: ConsulTaggedAddresses;
  NodeMeta?: ConsulNodeMeta;
  /** Kind of service (e.g., typical, connect-proxy, mesh-gateway) */
  ServiceKind?: string;
  /** Unique service instance identifier */
  ServiceID?: string;
  /** Name of the service */
  ServiceName?: string;
  /** Tags associated with the service for filtering and routing */
  ServiceTags?: string[];
  /** IP address where the service is accessible */
  ServiceAddress?: string;
  ServiceWeights?: ConsulServiceWeights;
  /** Custom metadata key-value pairs for the service */
  ServiceMeta?: ConsulServiceResponseServiceMeta;
  /** Port number where the service is listening */
  ServicePort?: number;
  /** Unix socket path if using Unix sockets instead of TCP */
  ServiceSocketPath?: string;
  /** Whether tags can be modified via the API */
  ServiceEnableTagOverride?: boolean;
  ServiceProxy?: ConsulServiceProxy;
  ServiceConnect?: ConsulServiceConnect;
  /** Locality information for the service */
  ServiceLocality?: ConsulServiceResponseServiceLocality;
  /** Raft index when the service was created */
  CreateIndex?: number;
  /** Raft index when the service was last modified */
  ModifyIndex?: number;
}
