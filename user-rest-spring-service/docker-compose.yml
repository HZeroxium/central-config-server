# docker-compose.yml - REST Spring Service Standalone

services:
  mongodb:
    image: mongo:8.0
    container_name: rest-service-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: users
    volumes:
      - mongodb_data:/data/db
    networks:
      - rest-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  user-rpc-thrift-service:
    image: user-rpc-thrift-service:latest
    container_name: user-rpc-thrift-service
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - PERSISTENCE_TYPE=mongo
      - SERVER_PORT=8080
      - THRIFT_PORT=9090
      - MONGODB_URI=mongodb://mongodb:27017/users
      - JDBC_URL=jdbc:h2:mem:userdb;DB_CLOSE_DELAY=-1;MODE=LEGACY
    ports:
      - "8080:8080"
      - "9090:9090"
    networks:
      - rest-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  user-rest-spring-service:
    build:
      context: .
      dockerfile: Dockerfile
    image: user-rest-spring-service:latest
    container_name: user-rest-spring-service
    depends_on:
      user-rpc-thrift-service:
        condition: service_healthy
    environment:
      - SERVER_PORT=8083
      - THRIFT_HOST=user-rpc-thrift-service
      - THRIFT_PORT=9090
    ports:
      - "8083:8083"
    networks:
      - rest-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  mongodb_data:

networks:
  rest-network:
    driver: bridge

