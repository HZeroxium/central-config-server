// spring-boot-admin-server/build.gradle

plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '3.3.13'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations.all {
    exclude group: 'ch.qos.logback', module: 'logback-classic'
    exclude group: 'ch.qos.logback', module: 'logback-core'
    exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    // Spring Boot Admin Server
    implementation 'de.codecentric:spring-boot-admin-starter-server:3.3.4'
    
    // Spring Boot starters with proper logging exclusions
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Micrometer for metrics
    implementation 'io.micrometer:micrometer-core:1.13.15'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.13.15'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Custom task to build Docker image
task buildDocker(type: Exec) {
    dependsOn bootJar
    commandLine 'docker', 'build', '-t', 'hzeroxium/spring-boot-admin-server:latest', '.'
}

// Custom task to run E2E tests
task e2eTest(type: Test) {
    useJUnitPlatform()
    systemProperty 'spring.profiles.active', 'e2e'
    include '**/*E2ETest*'
    include '**/*E2ESimpleTest*'
}
