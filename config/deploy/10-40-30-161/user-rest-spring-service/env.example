# =========================
# user-rest-spring-service â€” environment variables (example)
# Copy this file as-is (the run.sh scripts will use it directly via --env-file)
# Replace values to match your environment. Lines starting with # are comments.
# =========================

# -------------------------
# Service identity & runtime
# -------------------------
SERVICE_NAME=user-rest-spring-service            # Used for Docker container name/labels/logging
SERVICE_ENVIRONMENT=prod                         # Arbitrary label (prod/staging/dev)

# -------------------------
# Ports & networking (host-level mapping)
# -------------------------
# HTTP port mapping (host:container). The Spring Boot app will listen on CONTAINER_HTTP_PORT inside the container
HOST_HTTP_PORT=28080                             # Host port to expose the REST API externally
CONTAINER_HTTP_PORT=8080                         # Spring Boot server.port inside container

# -------------------------
# JVM & Spring profiles
# -------------------------
SPRING_PROFILES_ACTIVE=default                   # Spring profiles: default/prod/staging/dev
JAVA_OPTS=-XX:+UseG1GC -XX:MaxRAMPercentage=75.0 # Append extra JVM flags if needed

# -------------------------
# Kafka connectivity (prefer SPRING_KAFKA_BOOTSTRAP_SERVERS)
# -------------------------
SPRING_KAFKA_BOOTSTRAP_SERVERS=<KAFKA_HOST>:<KAFKA_PORT>  # Kafka bootstrap servers (comma-separated)
KAFKA_BOOTSTRAP_SERVERS=<KAFKA_HOST>:<KAFKA_PORT>         # Provided for compatibility; Spring uses SPRING_KAFKA_*

# -------------------------
# Redis connectivity for cache
# -------------------------
REDIS_HOST=<REDIS_HOST>                           # Redis host/IP
REDIS_PORT=<REDIS_PORT>                           # Redis port on host
SPRING_DATA_REDIS_URL=redis://<REDIS_HOST>:<REDIS_PORT>   # Full Redis URL (overrides REDIS_HOST/PORT)

# -------------------------
# Cache provider selection (unified cache config in this repo)
# -------------------------
APP_CACHE_PROVIDER=REDIS                          # Available: CAFFEINE, REDIS, TWO_LEVEL, NOOP
APP_CACHE_ENABLE_FALLBACK=true                    # Fallback to safer cache when primary fails

# -------------------------
# Thrift client configuration (maps to thrift.client.*)
# -------------------------
THRIFT_CLIENT_HOST=<THRIFT_HOST>                   # Thrift server hostname/IP or LB VIP
THRIFT_CLIENT_PORT=<THRIFT_PORT>                   # Thrift server TCP port
THRIFT_CLIENT_TIMEOUT=30000                       # Socket timeout in ms
THRIFT_CLIENT_RETRY_ATTEMPTS=3                    # Retry attempts for idempotent RPCs
THRIFT_CLIENT_CONNECTION_POOL_SIZE=10             # Client connection pool size

# -------------------------
# Observability toggles
# -------------------------
MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=*       # Expose all actuator endpoints (review for prod)
MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=always    # Show health details
MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true # Enable Prometheus endpoint

# -------------------------
# Logging (JSON recommended for Loki/Promtail)
# -------------------------
LOGGING_LEVEL_ROOT=INFO
LOGGING_LEVEL_COM_EXAMPLE=DEBUG

# -------------------------
# Container labels for Promtail/Grafana (do not change keys, values are fine)
# -------------------------
LOG_LABEL_SERVICE=user-rest-spring-service        # Label used by promtail to pick logs
LOG_LABEL_ENVIRONMENT=docker                      # Arbitrary environment tag for logs

# -------------------------
# Optional HTTP exposure bindings
# -------------------------
SERVER_ADDRESS=0.0.0.0                           # Bind address inside container
SERVER_PORT=${CONTAINER_HTTP_PORT}                # Spring Boot server.port


