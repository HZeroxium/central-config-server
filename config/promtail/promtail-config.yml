server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push
    timeout: 10s
    backoff_config:
      min_period: 500ms
      max_period: 5m
      max_retries: 10

scrape_configs:
  # Scrape logs from Docker containers (Primary method)
  - job_name: docker-container-logs
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["service=user-rpc-thrift-service", "service=user-rest-spring-service"]

    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container_name'
      - source_labels: ['__meta_docker_container_label_service']
        target_label: 'service'
      - source_labels: ['__meta_docker_container_label_environment']
        target_label: 'environment'
      - source_labels: ['__meta_docker_container_id']
        target_label: 'container_id'

    pipeline_stages:
      # Parse JSON logs from Spring Boot applications
      - json:
          expressions:
            timestamp: time
            level: level
            message: message
            loggerName: loggerName
            thread: thread
            service: service
            container_id: container_id
            environment: environment

      - timestamp:
          source: timestamp
          format: RFC3339

      - labels:
          level:
          loggerName:
          thread:
          service:
          container_id:
          environment:

      - output:
          source: message

  # Scrape logs from file system (Backup method)
  - job_name: user-rpc-file-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: application-logs
          service: user-rpc-thrift-service
          __path__: /var/log/apps/user-rpc-thrift-service/*.log

    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3}) \[(?P<thread>[^\]]+)\] (?P<level>\w+)\s+(?P<logger>[^-]+) - (?P<message>.*)'
      
      - timestamp:
          source: timestamp
          format: '2006-01-02 15:04:05.000'
      
      - labels:
          level:
          logger:
          thread:
          service:
      
      - output:
          source: message

  # Scrape logs from REST service files
  - job_name: user-rest-file-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: application-logs
          service: user-rest-spring-service
          __path__: /var/log/apps/user-rest-spring-service/*.log

    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3}) \[(?P<thread>[^\]]+)\] (?P<level>\w+)\s+(?P<logger>[^-]+) - (?P<message>.*)'
      
      - timestamp:
          source: timestamp
          format: '2006-01-02 15:04:05.000'
      
      - labels:
          level:
          logger:
          thread:
          service:
      
      - output:
          source: message

  # Scrape system logs
  - job_name: system-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: system-logs
          __path__: /var/log/host/syslog

    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\S+\s+\d+\s+\d+:\d+:\d+)\s+(?P<hostname>\S+)\s+(?P<service>\S+):\s+(?P<message>.*)'
      
      - timestamp:
          source: timestamp
          format: Jan 2 15:04:05

      - labels:
          hostname:
          service:

      - output:
          source: message
