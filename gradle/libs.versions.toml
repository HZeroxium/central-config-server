[versions]
# Spring Boot
spring-boot = "3.3.13"
spring-dependency-management = "1.1.6"

# Java
java = "21"

# Thrift
thrift = "0.22.0"

# Kafka
kafka = "3.7.0"

# Jackson
jackson = "2.17.2"

# Micrometer
micrometer = "1.13.15"
micrometer-tracing = "1.3.13"

# Lombok
lombok = "1.18.32"

# Testing
junit = "5.10.2"
mockito = "5.11.0"
assertj = "3.25.3"
testcontainers = "1.20.1"
wiremock = "2.35.0"
rest-assured = "5.4.0"

# Caching
caffeine = "3.1.8"

# Redis
lettuce = "6.3.2.RELEASE"

# Validation
jakarta-validation = "3.0.2"

# Swagger/OpenAPI
swagger-annotations = "2.2.22"
springdoc-openapi = "2.6.0"

# Resilience4j
resilience4j = "2.2.0"

# Zipkin
zipkin-reporter = "3.4.3"
brave = "6.0.3"

# H2 Database
h2 = "2.3.232"

# AspectJ
aspectjweaver = "1.9.21"

# Confluent Schema Registry & Avro
confluent-platform = "7.6.0"
avro = "1.11.3"

[libraries]
# Spring Boot BOM
spring-boot-bom = { group = "org.springframework.boot", name = "spring-boot-dependencies", version.ref = "spring-boot" }

# Spring Boot Starters
spring-boot-starter = { group = "org.springframework.boot", name = "spring-boot-starter" }
spring-boot-starter-web = { group = "org.springframework.boot", name = "spring-boot-starter-web" }
spring-boot-starter-actuator = { group = "org.springframework.boot", name = "spring-boot-starter-actuator" }
spring-boot-starter-validation = { group = "org.springframework.boot", name = "spring-boot-starter-validation" }
spring-boot-starter-cache = { group = "org.springframework.boot", name = "spring-boot-starter-cache" }
spring-boot-starter-data-jpa = { group = "org.springframework.boot", name = "spring-boot-starter-data-jpa" }
spring-boot-starter-data-mongodb = { group = "org.springframework.boot", name = "spring-boot-starter-data-mongodb" }
spring-boot-starter-data-redis = { group = "org.springframework.boot", name = "spring-boot-starter-data-redis" }
spring-boot-starter-log4j2 = { group = "org.springframework.boot", name = "spring-boot-starter-log4j2" }
spring-boot-starter-test = { group = "org.springframework.boot", name = "spring-boot-starter-test" }
spring-boot-testcontainers = { group = "org.springframework.boot", name = "spring-boot-testcontainers" }

# Spring Framework
spring-aop = { group = "org.springframework", name = "spring-aop" }
spring-kafka = { group = "org.springframework.kafka", name = "spring-kafka" }

# Kafka
kafka-clients = { group = "org.apache.kafka", name = "kafka-clients", version.ref = "kafka" }

# Thrift
thrift-lib = { group = "org.apache.thrift", name = "libthrift", version.ref = "thrift" }
javax-annotation-api = { group = "javax.annotation", name = "javax.annotation-api", version = "1.3.2" }

# Jackson
jackson-databind = { group = "com.fasterxml.jackson.core", name = "jackson-databind", version.ref = "jackson" }
jackson-datatype-jsr310 = { group = "com.fasterxml.jackson.datatype", name = "jackson-datatype-jsr310", version.ref = "jackson" }

# Micrometer
micrometer-core = { group = "io.micrometer", name = "micrometer-core", version.ref = "micrometer" }
micrometer-registry-prometheus = { group = "io.micrometer", name = "micrometer-registry-prometheus", version.ref = "micrometer" }
micrometer-tracing-bridge-brave = { group = "io.micrometer", name = "micrometer-tracing-bridge-brave", version.ref = "micrometer-tracing" }
micrometer-test = { group = "io.micrometer", name = "micrometer-test", version.ref = "micrometer" }

# Zipkin
zipkin-reporter-brave = { group = "io.zipkin.reporter2", name = "zipkin-reporter-brave", version.ref = "zipkin-reporter" }
brave = { group = "io.zipkin.brave", name = "brave", version.ref = "brave" }

# Lombok
lombok = { group = "org.projectlombok", name = "lombok", version.ref = "lombok" }

# Testing
junit-jupiter = { group = "org.junit.jupiter", name = "junit-jupiter", version.ref = "junit" }
mockito-core = { group = "org.mockito", name = "mockito-core", version.ref = "mockito" }
mockito-junit-jupiter = { group = "org.mockito", name = "mockito-junit-jupiter", version.ref = "mockito" }
assertj-core = { group = "org.assertj", name = "assertj-core", version.ref = "assertj" }
testcontainers-junit-jupiter = { group = "org.testcontainers", name = "junit-jupiter", version.ref = "testcontainers" }
testcontainers-mongodb = { group = "org.testcontainers", name = "mongodb", version.ref = "testcontainers" }
testcontainers-postgresql = { group = "org.testcontainers", name = "postgresql", version.ref = "testcontainers" }
wiremock-jre8 = { group = "com.github.tomakehurst", name = "wiremock-jre8", version.ref = "wiremock" }
rest-assured = { group = "io.rest-assured", name = "rest-assured", version.ref = "rest-assured" }
rest-assured-json-schema-validator = { group = "io.rest-assured", name = "json-schema-validator", version.ref = "rest-assured" }

# Caching
caffeine = { group = "com.github.ben-manes.caffeine", name = "caffeine", version.ref = "caffeine" }
lettuce-core = { group = "io.lettuce", name = "lettuce-core", version.ref = "lettuce" }

# Validation
jakarta-validation-api = { group = "jakarta.validation", name = "jakarta.validation-api", version.ref = "jakarta-validation" }

# Swagger/OpenAPI
swagger-annotations = { group = "io.swagger.core.v3", name = "swagger-annotations", version.ref = "swagger-annotations" }
springdoc-openapi-starter-webmvc-ui = { group = "org.springdoc", name = "springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc-openapi" }

# Resilience4j
resilience4j-spring-boot3 = { group = "io.github.resilience4j", name = "resilience4j-spring-boot3", version.ref = "resilience4j" }
resilience4j-circuitbreaker = { group = "io.github.resilience4j", name = "resilience4j-circuitbreaker", version.ref = "resilience4j" }
resilience4j-retry = { group = "io.github.resilience4j", name = "resilience4j-retry", version.ref = "resilience4j" }
resilience4j-timelimiter = { group = "io.github.resilience4j", name = "resilience4j-timelimiter", version.ref = "resilience4j" }

# Database
h2 = { group = "com.h2database", name = "h2", version.ref = "h2" }

# AspectJ
aspectjweaver = { group = "org.aspectj", name = "aspectjweaver", version.ref = "aspectjweaver" }

# Confluent Schema Registry & Avro
confluent-schema-registry-client = { group = "io.confluent", name = "kafka-schema-registry-client", version = "5.3.0" }
confluent-avro-serializer = { group = "io.confluent", name = "kafka-avro-serializer", version = "5.3.0" }
avro = { group = "org.apache.avro", name = "avro", version.ref = "avro" }
avro-compiler = { group = "org.apache.avro", name = "avro-compiler", version.ref = "avro" }

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }
java = { id = "java" }
idea = { id = "idea" }
avro = { id = "com.github.davidmc24.gradle.plugin.avro", version = "1.9.1" }
kafka-schema-registry = { id = "com.github.imflog.kafka-schema-registry-gradle-plugin", version = "1.13.0" }

[bundles]
spring-boot-web = ["spring-boot-starter-web", "spring-boot-starter-actuator", "spring-boot-starter-validation"]
spring-boot-data = ["spring-boot-starter-data-jpa", "spring-boot-starter-data-mongodb", "spring-boot-starter-data-redis"]
spring-boot-cache = ["spring-boot-starter-cache", "caffeine", "lettuce-core"]
spring-boot-logging = ["spring-boot-starter-log4j2"]
spring-boot-testing = ["spring-boot-starter-test", "spring-boot-testcontainers"]
kafka = ["spring-kafka", "kafka-clients"]
jackson = ["jackson-databind", "jackson-datatype-jsr310"]
micrometer = ["micrometer-core", "micrometer-registry-prometheus", "micrometer-tracing-bridge-brave"]
zipkin = ["zipkin-reporter-brave", "brave"]
testing = ["junit-jupiter", "mockito-core", "mockito-junit-jupiter", "assertj-core"]
testcontainers = ["testcontainers-junit-jupiter", "testcontainers-mongodb", "testcontainers-postgresql"]
resilience4j = ["resilience4j-spring-boot3", "resilience4j-circuitbreaker", "resilience4j-retry", "resilience4j-timelimiter"]
schema-registry = ["confluent-schema-registry-client", "confluent-avro-serializer", "avro"]
