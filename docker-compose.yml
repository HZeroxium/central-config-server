# docker-compose.config-server-min.yml
# Core application services (config-server, sample-service, config-control-service)
# Connects to external infra-network for infrastructure services

services:
  # Config Server
  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    image: hzeroxium/config-server:latest
    container_name: config-server
    ports:
      - "8888:8888"
    env_file:
      - ./config/env/env.infra-remote
    environment:
      - CONFIG_GIT_URI=https://github.com/HZeroxium/ztf-spring-cloud-config-server.git
      - CONFIG_GIT_LABEL=master
      - SPRING_CLOUD_CONSUL_DISCOVERY_HEARTBEAT_ENABLED=true
      - SPRING_CLOUD_CONSUL_DISCOVERY_HEARTBEAT_TTL=10s
      - KAFKA_BROKERS=${KAFKA_BROKERS}
      - CONSUL_HOST=${CONSUL_HOST}
      - CONSUL_PORT=${CONSUL_PORT}
    networks:
      - infra-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # Sample Service
  sample-service:
    build:
      context: ./sample-service
      dockerfile: Dockerfile
    image: hzeroxium/sample-service:latest
    container_name: sample-service
    ports:
      - "28080:8080"
    env_file:
      - ./config/env/env.infra-remote
    environment:
      - CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
      - SPRING_CLOUD_CONSUL_DISCOVERY_DEREGISTER_CRITICAL_SERVICE_AFTER=30s
      - SPRING_CLOUD_CONSUL_DISCOVERY_DEREGISTER=true
      - KAFKA_BROKERS=${KAFKA_BROKERS}
      - SPRING_PROFILES_ACTIVE=dev
      - ZCM_SDK_SERVICE_NAME=sample-service
      - ZCM_SDK_CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
      - ZCM_SDK_DISCOVERY_CONSUL_HOST=${CONSUL_HOST}
      - ZCM_SDK_DISCOVERY_CONSUL_PORT=${CONSUL_PORT}
      - ZCM_SDK_DISCOVERY_CONSUL_HEARTBEAT_ENABLED=true
      - ZCM_SDK_DISCOVERY_CONSUL_REGISTER=true
      - ZCM_SDK_PING_ENABLED=true
      - ZCM_SDK_CONTROL_URL=${CONFIG_CONTROL_URL}
      # Observability
      - MANAGEMENT_OTLP_TRACING_ENDPOINT=${ALLOY_OTLP_HTTP}/v1/traces
      - MANAGEMENT_OTLP_METRICS_EXPORT_ENABLED=true
      - MANAGEMENT_OTLP_METRICS_EXPORT_URL=${ALLOY_OTLP_HTTP}/v1/metrics
    networks:
      - infra-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    stop_grace_period: 30s
    restart: unless-stopped

  # Config Control Service
  config-control-service:
    build:
      context: ./config-control-service
      dockerfile: Dockerfile
    image: hzeroxium/config-control-service:latest
    container_name: config-control-service
    ports:
      - "8081:8080"    # HTTP
      - "9090:9090"    # Thrift
      - "9091:9091"    # gRPC
    env_file:
      - ./config/env/env.infra-remote
    environment:
      - CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
      - CONSUL_URL=http://${CONSUL_HOST}:${CONSUL_PORT}
      - SPRING_CLOUD_CONSUL_DISCOVERY_HEARTBEAT_ENABLED=true
      - SPRING_CLOUD_CONSUL_DISCOVERY_HEARTBEAT_TTL=10s
      - MONGODB_URI=mongodb://${MONGODB_HOST}:${MONGODB_PORT}/config_control
      - REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}
      - KAFKA_BROKERS=${KAFKA_BROKERS}
      - THRIFT_PORT=9090
      - GRPC_PORT=9091
      - LOGGING_LEVEL_ROOT=INFO
      # Observability
      - MANAGEMENT_OTLP_TRACING_ENDPOINT=${ALLOY_OTLP_HTTP}/v1/traces
      - MANAGEMENT_OTLP_METRICS_EXPORT_ENABLED=true
      - MANAGEMENT_OTLP_METRICS_EXPORT_URL=${ALLOY_OTLP_HTTP}/v1/metrics
      # Keycloak configuration
      - KEYCLOAK_ISSUER_URI=http://keycloak:8082/realms/config-control
      - KEYCLOAK_AUDIENCE=config-control-service
      - KEYCLOAK_ADMIN_URL=http://keycloak:8082
      - KEYCLOAK_CLIENT_ID=config-control-service
      - KEYCLOAK_CLIENT_SECRET=config-control-service-secret
    networks:
      - infra-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    

networks:
  infra-network:
    # external: true
    name: infra-network
