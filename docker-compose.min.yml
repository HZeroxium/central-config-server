# docker-compose.min.yml

services:
  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    image: hzeroxium/config-server:latest
    container_name: config-server
    environment:
      - CONFIG_GIT_URI=https://github.com/HZeroxium/ztf-spring-cloud-config-server
    ports:
      - "8888:8888"
    networks:
      - thrift-network-dev
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--spider",
          "-q",
          "http://localhost:8888/actuator/health",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  config-control-service:
    build:
      context: ./config-control-service
      dockerfile: Dockerfile
    image: hzeroxium/config-control-service:latest
    container_name: config-control-service
    environment:
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - MONGODB_URI=mongodb://mongodb:27017/config-control
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - ENVIRONMENT=development
    ports:
      - "8889:8889"
    networks:
      - thrift-network-dev
    depends_on:
      config-server:
        condition: service_healthy
      consul:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs/config-control-service:/app/logs:rw
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=config-control-service,environment=docker"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--spider",
          "-q",
          "http://localhost:8889/actuator/health",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Consul server for service discovery
  consul:
    image: hashicorp/consul:1.17
    container_name: consul
    ports:
      - "8500:8500"
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    command: >
      consul agent -dev 
      -client=0.0.0.0 
      -ui 
      -log-level=info 
      -data-dir=/consul/data
    volumes:
      - consul_data:/consul/data
    networks:
      - thrift-network-dev
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s

  # Kafka cluster (KRaft mode - single node for learning)
  kafka:
    image: bitnami/kafka:3.9
    container_name: kafka
    # ports:
    #   - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,PLAINTEXT_HOST://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - thrift-network-dev
    healthcheck:
      test:
        ["CMD", "kafka-topics.sh", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  mongodb:
    image: mongo:8.0
    container_name: mongodb
    environment:
      - MONGO_INITDB_DATABASE=users
    # ports:
    #   - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - thrift-network-dev
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    depends_on:
      mongodb:
        condition: service_healthy
    ports:
      - "8082:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongodb:27017/users
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
    networks:
      - thrift-network-dev

  user-rest-spring-service:
    build:
      context: ./user-rest-spring-service
      dockerfile: Dockerfile
    image: hzeroxium/user-rest-spring-service:latest
    container_name: user-rest-spring-service
    env_file:
      - ./config/env/env.common
      - ./config/env/env.user-rest
    environment:
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    volumes:
      # Mount logs directory to host with proper permissions
      - ./logs/user-rest-spring-service:/app/logs:rw
    depends_on:
      config-server:
        condition: service_healthy
      config-control-service:
        condition: service_healthy
      consul:
        condition: service_healthy
      user-thrift-server-service-1:
        condition: service_healthy
      user-thrift-server-service-2:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
      spring-boot-admin-server:
        condition: service_healthy
    ports:
      - "28080:8080"
    networks:
      - thrift-network-dev
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=user-rest-spring-service,environment=docker"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:latest
    container_name: redis
    # ports:
    #   - "26379:6379"
    networks:
      - thrift-network-dev
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  user-watcher-service:
    build:
      context: ./user-watcher-service
      dockerfile: Dockerfile
    image: hzeroxium/user-watcher-service:latest
    container_name: user-watcher-service
    env_file:
      - ./config/env/env.common
      - ./config/env/env.user-watcher
    environment:
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - CONFIG_CONTROL_URL=http://config-control-service:8889
      - CONFIG_SERVER_URL=http://config-server:8888
    ports:
      - "8081:8080"
    volumes:
      - ./logs/user-watcher-service:/app/logs:rw
    depends_on:
      config-server:
        condition: service_healthy
      config-control-service:
        condition: service_healthy
      consul:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
      spring-boot-admin-server:
        condition: service_healthy
    networks:
      - thrift-network-dev
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=user-watcher-service,environment=docker"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  spring-boot-admin-server:
    build:
      context: ./spring-boot-admin-server
      dockerfile: Dockerfile
    image: hzeroxium/spring-boot-admin-server:latest
    container_name: spring-boot-admin-server
    env_file:
      - ./config/env/env.common
    ports:
      - "8083:8083"
    volumes:
      - ./logs/spring-boot-admin-server:/app/logs:rw
    networks:
      - thrift-network-dev
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=spring-boot-admin-server,environment=docker"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  user-thrift-server-service-1:
    build:
      context: ./user-thrift-server-service
      dockerfile: Dockerfile
    image: hzeroxium/user-thrift-server-service:latest
    container_name: user-thrift-server-service-1
    env_file:
      - ./config/env/env.common
      - ./config/env/env.user-thrift
    environment:
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - SERVER_PORT=8080
      - THRIFT_PORT=9090
    ports:
      - "28082:8080"
      - "29090:9090"
    volumes:
      - ./logs/user-thrift-server-service-1:/app/logs:rw
    depends_on:
      config-server:
        condition: service_healthy
      config-control-service:
        condition: service_healthy
      consul:
        condition: service_healthy
      kafka:
        condition: service_healthy
      user-watcher-service:
        condition: service_healthy
      redis:
        condition: service_healthy
      spring-boot-admin-server:
        condition: service_healthy
    networks:
      - thrift-network-dev
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=user-thrift-server-service-1,environment=docker"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  user-thrift-server-service-2:
    build:
      context: ./user-thrift-server-service
      dockerfile: Dockerfile
    image: hzeroxium/user-thrift-server-service:latest
    container_name: user-thrift-server-service-2
    env_file:
      - ./config/env/env.common
      - ./config/env/env.user-thrift
    environment:
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - SERVER_PORT=8081
      - THRIFT_PORT=9091
    ports:
      - "28083:8081"
      - "29091:9091"
    volumes:
      - ./logs/user-thrift-server-service-2:/app/logs:rw
    depends_on:
      config-server:
        condition: service_healthy
      config-control-service:
        condition: service_healthy
      consul:
        condition: service_healthy
      kafka:
        condition: service_healthy
      user-watcher-service:
        condition: service_healthy
      redis:
        condition: service_healthy
      spring-boot-admin-server:
        condition: service_healthy
    networks:
      - thrift-network-dev
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=user-thrift-server-service-2,environment=docker"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  consul_data:
  mongodb_data:
  kafka_data:
  loki_data:
  grafana_data:
  prometheus_data:
  redis_data:
networks:
  thrift-network-dev:
    driver: bridge
