server:
  port: ${SERVER_PORT:8080}

spring:
  application:
    name: config-control-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:default}
  cache:
    type: caffeine
  main:
    allow-bean-definition-overriding: true

  # MongoDB for metadata storage
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://mongodb:27017/config_control}
    redis:
      url: ${REDIS_URL:redis://:redis123@redis:6379}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  # Kafka for Bus
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS:kafka:9092}
    consumer:
      group-id: config-control-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  # Consul Discovery
  cloud:
    consul:
      enabled: true
      host: ${CONSUL_HOST:consul}
      port: ${CONSUL_PORT:8500}
      discovery:
        enabled: true
        register: true
        service-name: ${spring.application.name}
        health-check-critical-timeout: 30s
        health-check-interval: 10s
        health-check-timeout: 3s
        health-check-path: /actuator/health
        prefer-ip-address: true
        hostname: ${HOSTNAME:localhost}
        instance-id: ${spring.application.name}-${server.port}-${random.value}
        metadata:
          version: "1.0.0"
          thrift_port: ${thrift.server.port}
          grpc_port: ${grpc.server.port}
        tags:
          - config-control
          - management
    bus:
      enabled: true
      refresh:
        enabled: true

# New Consul SDK Configuration
consulclient:
  consul-url: ${CONSUL_URL:http://consul:8500}
  token: ${CONSUL_TOKEN:}
  connect-timeout: 5s
  read-timeout: 10s
  write-timeout: 10s

# App configuration
app:
  name: config-control-service
  version: 1.0.0
  environment: ${ENVIRONMENT:development}
  cache:
    provider: CAFFEINE  # Default to local cache
    enable-fallback: true
    caffeine:
      maximum-size: 10000
      expire-after-write: 10m
      expire-after-access: 30m
      record-stats: true
    redis:
      default-ttl: 10m
      enable-statistics: true
      transaction-aware: true
      fallback-to-caffeine: true
    two-level:
      write-through: true
      invalidate-l1-on-l2-update: true
    caches:
      service-instances:
        ttl: 5m
        maximum-size: 10000
        allow-null-values: false
      drift-events:
        ttl: 2m
        maximum-size: 5000
        allow-null-values: false
      config-hashes:
        ttl: 10m
        maximum-size: 1000
        allow-null-values: false
      consul-services:
        ttl: 1m
        maximum-size: 500
        allow-null-values: false
      consul-health:
        ttl: 30s
        maximum-size: 1000
        allow-null-values: false

# Config Server client configuration
config-server:
  url: ${CONFIG_SERVER_URL:http://config-server:8888}
  timeout: 5000
  retry:
    max-attempts: 3
    backoff-delay: 1000

# Consul client configuration
consul:
  url: ${CONSUL_URL:http://consul:8500}
  timeout: 5000
  retry:
    max-attempts: 3
    backoff-delay: 1000

# Management/Actuator
management:
  tracing:
    enabled: false # Disable Zipkin tracing
    sampling:
      probability: 0.0
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    prometheus:
      enabled: true
    busrefresh:
      enabled: true
  metrics:
    enable:
      jvm: true
      system: true
      web: true
    tags:
      application: config-control-service
      service: config-control-service
      environment: ${ENVIRONMENT:development}
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.9, 0.95, 0.99
      slo:
        http.server.requests: 50ms, 100ms, 200ms, 500ms, 1s, 2s, 5s
  health:
    redis:
      enabled: true
    mongo:
      enabled: true

# Thrift Server Configuration
thrift:
  server:
    port: ${THRIFT_PORT:9090}

# gRPC Server Configuration  
grpc:
  server:
    port: ${GRPC_PORT:9091}

# KV Store Configuration
kv:
  backend: ${KV_BACKEND:consul} # consul or etcd
  consul:
    base-url: ${KV_CONSUL_URL:http://consul:8500}
    wait: 5m
    token: ${KV_CONSUL_TOKEN:}
  etcd:
    endpoints:
      - ${KV_ETCD_ENDPOINTS:http://etcd:2379}
    connect-timeout: 5s
    keepalive-time: 10s
    namespace: ${KV_ETCD_NAMESPACE:}

logging:
  level:
    root: ${LOGGING_LEVEL_ROOT:INFO}
    com.example.control: ${LOGGING_LEVEL_COM_EXAMPLE_CONTROL:DEBUG}
    org.springframework.web: INFO
    org.springframework.cloud: DEBUG
  config: classpath:log4j2-spring.xml
