// user-rpc-thrift-service/build.gradle

plugins {
    alias(libs.plugins.java)
    alias(libs.plugins.idea)
    alias(libs.plugins.spring.boot)
    alias(libs.plugins.spring.dependency.management)
}

// Inherit from parent project
group = 'com.example'
version = '1.0.0'

configurations.configureEach {
    exclude group: 'ch.qos.logback', module: 'logback-classic'
    exclude group: 'ch.qos.logback', module: 'logback-core'
    exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
}

dependencies {
    // Shared common library
    implementation project(':shared-common')
    testImplementation project(':shared-common')
    
    // Spring Boot starters with proper logging exclusions
    implementation(libs.spring.boot.starter.web) {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    implementation libs.spring.boot.starter.actuator
    implementation libs.spring.boot.starter.data.mongodb
    implementation libs.spring.boot.starter.data.jpa
    implementation libs.spring.boot.starter.log4j2
    implementation libs.spring.boot.starter.validation

    // Resilience4j for circuit breaker, retry, timeout
    implementation libs.resilience4j.spring.boot3
    implementation libs.resilience4j.circuitbreaker
    implementation libs.resilience4j.retry
    implementation libs.resilience4j.timelimiter

    // Micrometer for metrics and profiling
    implementation libs.micrometer.core
    implementation libs.micrometer.registry.prometheus
    implementation libs.micrometer.tracing.bridge.brave
    implementation libs.brave
    implementation libs.zipkin.reporter.brave

    // Spring Cache + providers
    implementation libs.spring.boot.starter.cache
    implementation libs.caffeine
    implementation libs.spring.boot.starter.data.redis
    implementation libs.lettuce.core
    implementation libs.jackson.datatype.jsr310
    
    // AOP for method-level profiling
    implementation libs.spring.aop
    implementation libs.aspectjweaver

    // OpenAPI/Swagger UI for Spring Boot 3
    implementation libs.springdoc.openapi.starter.webmvc.ui

    runtimeOnly libs.micrometer.registry.prometheus
    runtimeOnly libs.h2

    // Test dependencies
    testImplementation(libs.spring.boot.starter.test) {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    testImplementation libs.testcontainers.junit.jupiter
    testImplementation libs.testcontainers.mongodb
    testImplementation libs.testcontainers.postgresql
    testImplementation libs.assertj.core
    
    // Integration test dependencies
    testImplementation libs.spring.boot.testcontainers
    testImplementation libs.wiremock.jre8
}

configurations.configureEach {
    resolutionStrategy {
        // Allow version conflicts for now to get tests running
        // failOnVersionConflict()
    }
}

// Source sets configuration - no longer need Thrift generation here
sourceSets {
    main {
        java.srcDirs = ['src/main/java']
        resources.srcDirs = ['src/main/resources']
    }
    test {
        java.srcDirs = ['src/test/java']
        resources.srcDirs = ['src/test/resources']
    }
}

// Compile Java configuration
compileJava {
    options.encoding = 'UTF-8'
    dependsOn ':shared-common:generateThrift'
}

bootJar {
    archiveFileName = 'user-rpc-thrift-service.jar'
}

jar {
    enabled = false
}

// Docker build task
tasks.register('buildDocker', Exec) {
    group = 'docker'
    description = 'Build Docker image for user-rpc-thrift-service'
    dependsOn bootJar
    
    commandLine 'docker', 'build', '-t', 'hzeroxium/user-rpc-thrift-service:latest', '.'
    
    doFirst {
        println "Building Docker image for user-rpc-thrift-service..."
    }
}