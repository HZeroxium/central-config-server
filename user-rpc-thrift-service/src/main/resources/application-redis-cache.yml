spring:
  application:
    name: user-rpc-thrift-service
  cache:
    cache-names: userById, usersByCriteria, countByCriteria
    redis:
        enable-statistics: true
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      url: ${SPRING_DATA_REDIS_URL:redis://localhost:6379}
  # Don't exclude Redis auto-configuration for redis-cache profile
  autoconfigure:
    exclude: []


# Management and monitoring configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics,env,beans,configprops,loggers,threaddump,heapdump,cache
  endpoint:
    health:
      show-details: when_authorized
      show-components: always
    prometheus:
      enabled: true
    metrics:
      enabled: true
  metrics:
    enable:
      cache: true
    tags:
      application: user-rpc-thrift-service
      service: user-rpc-thrift-service
      environment: ${ENVIRONMENT:development}
    distribution:
      percentiles-histogram:
        http.server.requests: true
        http.client.requests: true
      percentiles:
        http.server.requests: 0.5, 0.9, 0.95, 0.99
        http.client.requests: 0.5, 0.9, 0.95, 0.99
      slo:
        http.server.requests: 50ms, 100ms, 200ms, 500ms, 1s, 2s, 5s
        http.client.requests: 50ms, 100ms, 200ms, 500ms, 1s, 2s, 5s
  tracing:
    sampling:
      probability: 1.0

# Logging configuration - using Log4j2
logging:
  level:
    com.example.user: DEBUG
    org.springframework.web: DEBUG
    org.apache.thrift: DEBUG
    io.micrometer: DEBUG
    org.springframework.cache: DEBUG
  config: classpath:log4j2-spring.xml